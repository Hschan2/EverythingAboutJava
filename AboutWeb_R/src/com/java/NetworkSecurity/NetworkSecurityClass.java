package com.java.NetworkSecurity;

public class NetworkSecurityClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

//		네트워크 보안
//			* 보안은 자산을 지키는 것
//		네트워크에서 자산은 네트워크 상에서 전송되는 데이터
//		엔드포인트에서 엔드포인트까지 전송되는 데이터를 보호하는 행위
//		
//			* 해킹
//			1) 스니핑 - 대상의 몸든 네트워크 패킷을 훔쳐보며 정보를 수집 => 인증되지 않은 사람이 볼 수 있다 (기밀성 X)
//			2) 스푸핑 - 대상의 패킷을 변조 혹은 악의적 코드를 삽입 => 정보가 변경되어 잔달 (무결성 X)
//			3) DoS - 대상의 자원을 소모시켜 정상적인 서비스를 못하도록 방해 => 정보를 받을 수 없다 (가용성 X)
//			
//		1. 인터넷 레이어
//		IPsec (인터넷 프로토콜 시큐리티) 보안 프로토콜 사용해 보안 유지
//		IPsec - AH(Authentication Header)와 ESP(Encapsulation Security Protocol) 포함
//		AH보다 ESP가 더 좋은 보안을 제공 (레어에서 AH보다 ESP가 더 많은 부분을 차지하는 것)
//		ESP는 AH에서 제공하는 인증에서 암호화까지 가지고 있음. 무결성과 기밀성 보장
//		
//		2. 트랜스포트 레이어
//		TLS (Transport Layer Security)를 이용해 보안 유지
//		
//		클라이언트 요청 (클라의 랜덤 데이터 전송, 클라가 지원하는 암오화 방식 전송, 세션 아이디) 
//		-> 서버 응답 (서버의 랜덤 데이터 전송, 서버가 선택한 암호화 방식 전송, CA(신뢰할 수 있는 기관)에서 받은 인증서 전송)
//		-> 클라이언트 받음 (인증서가 CA에서 받은건지 검증, 랜덤 데이터로 PRE-MASTER SECRET 생성, PRE-MASTER SECRET를 암호화해 서버에 전송)
//		-> 서버가 클라이언트에서 받은 PRE-MASTER SECRET를 복호화, PRE-MASTER SECRET으로 세션 키 생성
//		-> 세션 연결 (세션 키(대칭키)를 사용해 데이터를 암호화해서 주고 받는다)
//		
//		3. 애플리케이션 레이어
//		HTTPS(SSL을 사용, == TLS를 사용하는 HTTP) 사용하여 보완 유지
//		
//		4. WHY?
//		기업은 데이터를 주고 받음.
//		가장 쉬운 방법은 실제 전용 회선 개통 BUT 거리가 멀 때 인프라를 구축하는 것이기 때문에 비용 증가
//		그래서 기존 퍼블릭망을 프라이빗하게 이용하는 방법인 VPN이 생긴다.
//		
//		기업은 물리적인 연결을 가까운 탑까지만 연결 그리고 앞단에 보안 장비를 두어 IPsec을 통해 퍼블릭망에서 데이터 통신
//		
//		다른 방법은 퍼블릭망이 아닌 통신사가 별도로 구성해 놓은 망을 이용
//		
//		5. VPN
//		상대적으로 합리적인 비용으로 전용망 구성
//		CPE VPN - 가까운 회선까지 물리적으로 연결. 별도의 보안장비를 두어 통신
//		MPLS VPN - 통신사들이 별도의 프라이빗 회선을 구성하면 그 회선에서 통신
		
	}

}
